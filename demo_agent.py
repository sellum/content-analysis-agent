#!/usr/bin/env python3
"""
Demo script showing the Content Analysis Agent capabilities directly.
This demonstrates the core agent functionality without HTTP overhead.
"""

import asyncio
from dapr_agents import tool, Agent, OpenAIChatClient
from dotenv import load_dotenv

# Load environment variables
load_dotenv()


@tool
def extract_themes(content: str) -> list:
    """Extract key themes and topics from the given content."""
    # This tool will be enhanced by the LLM to identify themes
    return ["theme1", "theme2", "theme3"]  # Placeholder, LLM will override


@tool
def analyze_sentiment(content: str) -> dict:
    """Analyze the emotional tone and sentiment of the content."""
    # This tool will be enhanced by the LLM to analyze sentiment
    return {"sentiment": "neutral", "confidence": "medium"}  # Placeholder, LLM will override


@tool
def generate_summary(content: str) -> str:
    """Generate a concise summary of the content."""
    # This tool will be enhanced by the LLM to create summaries
    return "Content summary will be generated by LLM"  # Placeholder, LLM will override


@tool
def provide_recommendations(content: str, themes: list, sentiment: str) -> list:
    """Provide actionable recommendations based on content analysis."""
    # This tool will be enhanced by the LLM to generate recommendations
    return ["Recommendation 1", "Recommendation 2"]  # Placeholder, LLM will override


@tool
def calculate_confidence_score(content: str, analysis_results: dict) -> float:
    """Calculate confidence score for the analysis based on content quality and analysis depth."""
    # This tool will be enhanced by the LLM to assess confidence
    return 0.85  # Placeholder, LLM will override


async def main():
    """Main function demonstrating the Content Analysis Agent."""
    
    # Sample content for analysis
    sample_content = """
    The rapid advancement of artificial intelligence and machine learning technologies 
    is fundamentally reshaping how businesses operate and compete in the digital age. 
    Companies that successfully integrate AI into their operations are seeing 
    significant improvements in efficiency, customer satisfaction, and innovation.
    
    However, this transformation also brings challenges. Organizations must navigate 
    complex ethical considerations, ensure data privacy, and manage the impact on 
    their workforce. The key to success lies in adopting a balanced approach that 
    leverages AI's capabilities while maintaining human oversight and values.
    
    Looking ahead, AI will continue to evolve, creating new opportunities and 
    challenges. Businesses that can adapt quickly and responsibly will be best 
    positioned to thrive in this AI-driven future.
    """
    
    # Create the Content Analysis Agent
    content_agent = Agent(
        name="ContentAnalyzer",
        role="Content Analysis Expert",
        instructions=[
            "You are an expert content analyst with deep understanding of text analysis, NLP, and business intelligence.",
            "Use the provided tools to perform comprehensive content analysis.",
            "Always provide accurate, insightful, and actionable analysis results.",
            "Maintain high standards of analysis quality and consistency.",
            "Provide detailed explanations for your analysis decisions.",
            "Focus on extracting meaningful insights that add business value."
        ],
        tools=[
            extract_themes,
            analyze_sentiment, 
            generate_summary,
            provide_recommendations,
            calculate_confidence_score
        ],
        llm=OpenAIChatClient(model="gpt-3.5-turbo"),  # Using GPT-3.5 for demo
    )
    
    print("="*60)
    print("CONTENT ANALYSIS AGENT DEMO")
    print("="*60)
    print(f"Analyzing content: {len(sample_content)} characters")
    print("-" * 60)
    
    try:
        # Run comprehensive analysis
        print("Running comprehensive content analysis...")
        response = await content_agent.run(f"""
        Please analyze the following content comprehensively:
        
        {sample_content}
        
        Use all available tools to:
        1. Extract key themes and topics
        2. Analyze sentiment and emotional tone
        3. Generate a concise summary
        4. Provide actionable recommendations
        5. Calculate confidence score
        
        Provide a detailed analysis with clear insights.
        """)
        
        print("\n" + "="*60)
        print("ANALYSIS RESULTS")
        print("="*60)
        print(response)
        
        # Run thematic analysis
        print("\n" + "="*60)
        print("THEMATIC ANALYSIS")
        print("="*60)
        
        thematic_response = await content_agent.run(f"""
        Focus on extracting themes and topics from this content:
        
        {sample_content}
        
        Use the extract_themes tool and provide detailed theme analysis.
        """)
        
        print(thematic_response)
        
        # Run sentiment analysis
        print("\n" + "="*60)
        print("SENTIMENT ANALYSIS")
        print("="*60)
        
        sentiment_response = await content_agent.run(f"""
        Analyze the sentiment and emotional tone of this content:
        
        {sample_content}
        
        Use the analyze_sentiment tool and provide detailed sentiment analysis.
        """)
        
        print(sentiment_response)
        
        print("\n" + "="*60)
        print("DEMO COMPLETED SUCCESSFULLY!")
        print("="*60)
        
    except Exception as e:
        print(f"Error during analysis: {e}")


if __name__ == "__main__":
    asyncio.run(main())
